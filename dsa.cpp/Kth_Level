#include <iostream>
#include <vector>
using namespace std;

class Node {
public:
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

static int idx = -1;

Node* build_Tree(vector<int> preorder) {
    idx++;
    if (idx >= preorder.size() || preorder[idx] == -1) return NULL;

    Node* root = new Node(preorder[idx]);
    root->left = build_Tree(preorder);
    root->right = build_Tree(preorder);
    return root;
}

void Kth_Level(Node* root, int k)
{
    if (root == NULL) return;

    if (k == 1) {
        cout << root->data << " ";
        return;
    }

    Kth_Level(root->left, k - 1);
    Kth_Level(root->right, k - 1);
}

int main()
{
    vector<int> preorder = {1, 2, 7, -1, -1, 4, -1, -1, 5, -1, -1};
    Node* root = build_Tree(preorder);
    Kth_Level(root, 3);
    cout << endl;
}
